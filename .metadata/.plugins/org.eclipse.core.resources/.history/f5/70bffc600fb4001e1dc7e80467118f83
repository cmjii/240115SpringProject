package com.myweb.www.controller;

import java.security.Principal;

import javax.servlet.http.HttpServletRequest;

import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.web.savedrequest.HttpSessionRequestCache;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.myweb.www.security.MemberVO;
import com.myweb.www.service.MemberService;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Controller
@Slf4j
@RequiredArgsConstructor
@RequestMapping("/member/*")
public class MemberController {
	
	private final MemberService msv;
	private final BCryptPasswordEncoder bcEncoder;
	
	@GetMapping("/register")
	public void register() {}
	
	@PostMapping("/register")
	public String register(MemberVO mvo) {
		log.info("mvo :"+mvo);
		mvo.setPwd(bcEncoder.encode(mvo.getPwd()));
		int isok = msv.register(mvo);
		return "index";
	}
	
	@GetMapping("/login")
	public void login() {}

	@PostMapping("/login")
	public String loginPost(HttpServletRequest request, RedirectAttributes re) {
		//로그인 실패 시 넘어오는 메서드 (다시 로그인 페이지로 돌아와 오류 메시지 전송)
		//다시 로그인 하라고 유도
		re.addAttribute("email",request.getAttribute("email"));
		re.addAttribute("errMsg",request.getAttribute("errMsg"));
		return "redirect:/member/login";
	
		
	}
	
	@GetMapping("/modify")
	public void modify() {}
	
	//@RequestParam("email")String email : jsp에서 ? 로 달고오면 이 방법 사용
	
	@PostMapping("/modify")
	public String modify(Principal p,Model m) {
		log.info("getName : >>>>>>>>>>>>>>>> "+p.getName());
		String email = p.getName();
		m.addAttribute("mvo",msv.detail(email));	
		return "index";
	}
	
}
